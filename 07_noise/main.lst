                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _wait_vbl_done
                                     13 	.globl _joypad
                                     14 ;--------------------------------------------------------
                                     15 ; special function registers
                                     16 ;--------------------------------------------------------
                                     17 ;--------------------------------------------------------
                                     18 ; ram data
                                     19 ;--------------------------------------------------------
                                     20 	.area _DATA
                                     21 ;--------------------------------------------------------
                                     22 ; ram data
                                     23 ;--------------------------------------------------------
                                     24 	.area _INITIALIZED
                                     25 ;--------------------------------------------------------
                                     26 ; absolute external ram data
                                     27 ;--------------------------------------------------------
                                     28 	.area _DABS (ABS)
                                     29 ;--------------------------------------------------------
                                     30 ; global & static initialisations
                                     31 ;--------------------------------------------------------
                                     32 	.area _HOME
                                     33 	.area _GSINIT
                                     34 	.area _GSFINAL
                                     35 	.area _GSINIT
                                     36 ;--------------------------------------------------------
                                     37 ; Home
                                     38 ;--------------------------------------------------------
                                     39 	.area _HOME
                                     40 	.area _HOME
                                     41 ;--------------------------------------------------------
                                     42 ; code
                                     43 ;--------------------------------------------------------
                                     44 	.area _CODE
                                     45 ;main.c:4: void main(){
                                     46 ;	---------------------------------
                                     47 ; Function main
                                     48 ; ---------------------------------
    00000000                         49 _main::
                                     50 ;main.c:6: NR52_REG = 0x80;
    00000000 3E 80            [ 8]   51 	ld	a, #0x80
    00000002 E0r00            [12]   52 	ldh	(_NR52_REG + 0), a
                                     53 ;main.c:7: NR50_REG = 0x77;
    00000004 3E 77            [ 8]   54 	ld	a, #0x77
    00000006 E0r00            [12]   55 	ldh	(_NR50_REG + 0), a
                                     56 ;main.c:8: NR51_REG =  0xff;
    00000008 3E FF            [ 8]   57 	ld	a, #0xff
    0000000A E0r00            [12]   58 	ldh	(_NR51_REG + 0), a
                                     59 ;main.c:10: while(1) {
    0000000C                         60 00104$:
                                     61 ;main.c:11: UBYTE joypad_state = joypad();
    0000000C CDr00r00         [24]   62 	call	_joypad
                                     63 ;main.c:13: if(joypad_state){
    0000000F B7               [ 4]   64 	or	a, a
    00000010 28 FA            [12]   65 	jr	Z, 00104$
                                     66 ;main.c:14: NR42_REG = 0x1F;
    00000012 3E 1F            [ 8]   67 	ld	a, #0x1f
    00000014 E0r00            [12]   68 	ldh	(_NR42_REG + 0), a
                                     69 ;main.c:15: NR42_REG = 0xF1;
    00000016 3E F1            [ 8]   70 	ld	a, #0xf1
    00000018 E0r00            [12]   71 	ldh	(_NR42_REG + 0), a
                                     72 ;main.c:16: NR43_REG = 0x30;
    0000001A 3E 30            [ 8]   73 	ld	a, #0x30
    0000001C E0r00            [12]   74 	ldh	(_NR43_REG + 0), a
                                     75 ;main.c:17: NR44_REG = 0xC0;
    0000001E 3E C0            [ 8]   76 	ld	a, #0xc0
    00000020 E0r00            [12]   77 	ldh	(_NR44_REG + 0), a
                                     78 ;main.c:19: wait_vbl_done();
    00000022 CDr00r00         [24]   79 	call	_wait_vbl_done
                                     80 ;main.c:22: }
    00000025 18 E5            [12]   81 	jr	00104$
                                     82 	.area _CODE
                                     83 	.area _INITIALIZER
                                     84 	.area _CABS (ABS)
