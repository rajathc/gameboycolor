                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _delay
                                     14 	.globl _Smiler
                                     15 ;--------------------------------------------------------
                                     16 ; special function registers
                                     17 ;--------------------------------------------------------
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area _DATA
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area _INITIALIZED
    00000000                         26 _Smiler::
    00000000                         27 	.ds 32
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area _DABS (ABS)
                                     32 ;--------------------------------------------------------
                                     33 ; global & static initialisations
                                     34 ;--------------------------------------------------------
                                     35 	.area _HOME
                                     36 	.area _GSINIT
                                     37 	.area _GSFINAL
                                     38 	.area _GSINIT
                                     39 ;--------------------------------------------------------
                                     40 ; Home
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _HOME
                                     44 ;--------------------------------------------------------
                                     45 ; code
                                     46 ;--------------------------------------------------------
                                     47 	.area _CODE
                                     48 ;main.c:5: void main(){
                                     49 ;	---------------------------------
                                     50 ; Function main
                                     51 ; ---------------------------------
    00000000                         52 _main::
    00000000 3B               [ 8]   53 	dec	sp
                                     54 ;main.c:6: UINT8 currentspriteindex = 0;
    00000001 F8 00            [12]   55 	ldhl	sp,	#0
    00000003 36 00            [12]   56 	ld	(hl), #0x00
                                     57 ;main.c:8: set_sprite_data(0, 2, Smiler);
    00000005 11r00r00         [12]   58 	ld	de, #_Smiler
    00000008 D5               [16]   59 	push	de
    00000009 21 00 02         [12]   60 	ld	hl, #0x200
    0000000C E5               [16]   61 	push	hl
    0000000D CDr00r00         [24]   62 	call	_set_sprite_data
    00000010 E8 04            [16]   63 	add	sp, #4
                                     64 ;/Users/rajath/gbdk/include/gb/gb.h:1875: shadow_OAM[nb].tile=tile;
    00000012 21r02r00         [12]   65 	ld	hl, #(_shadow_OAM + 2)
    00000015 36 00            [12]   66 	ld	(hl), #0x00
                                     67 ;/Users/rajath/gbdk/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000017 21r00r00         [12]   68 	ld	hl, #_shadow_OAM
                                     69 ;/Users/rajath/gbdk/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    0000001A 3E 4E            [ 8]   70 	ld	a, #0x4e
    0000001C 22               [ 8]   71 	ld	(hl+), a
    0000001D 36 58            [12]   72 	ld	(hl), #0x58
                                     73 ;main.c:11: SHOW_SPRITES;
    0000001F F0r00            [12]   74 	ldh	a, (_LCDC_REG + 0)
    00000021 F6 02            [ 8]   75 	or	a, #0x02
    00000023 E0r00            [12]   76 	ldh	(_LCDC_REG + 0), a
                                     77 ;main.c:13: while (1){
    00000025                         78 00105$:
                                     79 ;main.c:14: if (currentspriteindex==0){
    00000025 F8 00            [12]   80 	ldhl	sp,	#0
    00000027 7E               [ 8]   81 	ld	a, (hl)
    00000028 B7               [ 4]   82 	or	a, a
    00000029 20 04            [12]   83 	jr	NZ, 00102$
                                     84 ;main.c:15: currentspriteindex = 1;
    0000002B 36 01            [12]   85 	ld	(hl), #0x01
    0000002D 18 04            [12]   86 	jr	00103$
    0000002F                         87 00102$:
                                     88 ;main.c:18: currentspriteindex = 0;
    0000002F F8 00            [12]   89 	ldhl	sp,	#0
    00000031 36 00            [12]   90 	ld	(hl), #0x00
    00000033                         91 00103$:
                                     92 ;/Users/rajath/gbdk/include/gb/gb.h:1875: shadow_OAM[nb].tile=tile;
    00000033 11r02r00         [12]   93 	ld	de, #(_shadow_OAM + 2)
    00000036 F8 00            [12]   94 	ldhl	sp,	#0
    00000038 7E               [ 8]   95 	ld	a, (hl)
    00000039 12               [ 8]   96 	ld	(de), a
                                     97 ;main.c:21: delay(1000);
    0000003A 11 E8 03         [12]   98 	ld	de, #0x03e8
    0000003D CDr00r00         [24]   99 	call	_delay
                                    100 ;/Users/rajath/gbdk/include/gb/gb.h:1977: OAM_item_t * itm = &shadow_OAM[nb];
    00000040 01r00r00         [12]  101 	ld	bc, #_shadow_OAM+0
                                    102 ;/Users/rajath/gbdk/include/gb/gb.h:1978: itm->y+=y, itm->x+=x;
    00000043 0A               [ 8]  103 	ld	a, (bc)
    00000044 02               [ 8]  104 	ld	(bc), a
    00000045 03               [ 8]  105 	inc	bc
    00000046 0A               [ 8]  106 	ld	a, (bc)
    00000047 C6 0A            [ 8]  107 	add	a, #0x0a
    00000049 02               [ 8]  108 	ld	(bc), a
                                    109 ;main.c:22: scroll_sprite(0,10,0);
    0000004A 18 D9            [12]  110 	jr	00105$
                                    111 ;main.c:24: }
    0000004C 33               [ 8]  112 	inc	sp
    0000004D C9               [16]  113 	ret
                                    114 	.area _CODE
                                    115 	.area _INITIALIZER
    00000000                        116 __xinit__Smiler:
    00000000 7E                     117 	.db #0x7e	; 126
    00000001 7E                     118 	.db #0x7e	; 126
    00000002 FF                     119 	.db #0xff	; 255
    00000003 81                     120 	.db #0x81	; 129
    00000004 FF                     121 	.db #0xff	; 255
    00000005 A5                     122 	.db #0xa5	; 165
    00000006 FF                     123 	.db #0xff	; 255
    00000007 81                     124 	.db #0x81	; 129
    00000008 FF                     125 	.db #0xff	; 255
    00000009 81                     126 	.db #0x81	; 129
    0000000A FF                     127 	.db #0xff	; 255
    0000000B BD                     128 	.db #0xbd	; 189
    0000000C FF                     129 	.db #0xff	; 255
    0000000D 81                     130 	.db #0x81	; 129
    0000000E 7E                     131 	.db #0x7e	; 126
    0000000F 7E                     132 	.db #0x7e	; 126
    00000010 7E                     133 	.db #0x7e	; 126
    00000011 7E                     134 	.db #0x7e	; 126
    00000012 FF                     135 	.db #0xff	; 255
    00000013 81                     136 	.db #0x81	; 129
    00000014 FF                     137 	.db #0xff	; 255
    00000015 A5                     138 	.db #0xa5	; 165
    00000016 FF                     139 	.db #0xff	; 255
    00000017 81                     140 	.db #0x81	; 129
    00000018 FF                     141 	.db #0xff	; 255
    00000019 A5                     142 	.db #0xa5	; 165
    0000001A FF                     143 	.db #0xff	; 255
    0000001B 99                     144 	.db #0x99	; 153
    0000001C FF                     145 	.db #0xff	; 255
    0000001D 81                     146 	.db #0x81	; 129
    0000001E 7E                     147 	.db #0x7e	; 126
    0000001F 7E                     148 	.db #0x7e	; 126
                                    149 	.area _CABS (ABS)
