                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (Mac OS X ppc)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _wait_vbl_done
                                     14 	.globl _joypad
                                     15 	.globl _Smiler
                                     16 ;--------------------------------------------------------
                                     17 ; special function registers
                                     18 ;--------------------------------------------------------
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area _DATA
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _INITIALIZED
    00000000                         27 _Smiler::
    00000000                         28 	.ds 32
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area _DABS (ABS)
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area _HOME
                                     37 	.area _GSINIT
                                     38 	.area _GSFINAL
                                     39 	.area _GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area _HOME
                                     44 	.area _HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area _CODE
                                     49 ;main.c:5: void main(){
                                     50 ;	---------------------------------
                                     51 ; Function main
                                     52 ; ---------------------------------
    00000000                         53 _main::
    00000000 3B               [ 8]   54 	dec	sp
                                     55 ;main.c:8: set_sprite_data(0, 2, Smiler);
    00000001 11r00r00         [12]   56 	ld	de, #_Smiler
    00000004 D5               [16]   57 	push	de
    00000005 21 00 02         [12]   58 	ld	hl, #0x200
    00000008 E5               [16]   59 	push	hl
    00000009 CDr00r00         [24]   60 	call	_set_sprite_data
    0000000C E8 04            [16]   61 	add	sp, #4
                                     62 ;/Users/rajath/gbdk/include/gb/gb.h:1875: shadow_OAM[nb].tile=tile;
    0000000E 21r02r00         [12]   63 	ld	hl, #(_shadow_OAM + 2)
    00000011 36 00            [12]   64 	ld	(hl), #0x00
                                     65 ;/Users/rajath/gbdk/include/gb/gb.h:1961: OAM_item_t * itm = &shadow_OAM[nb];
    00000013 21r00r00         [12]   66 	ld	hl, #_shadow_OAM
                                     67 ;/Users/rajath/gbdk/include/gb/gb.h:1962: itm->y=y, itm->x=x;
    00000016 3E 4E            [ 8]   68 	ld	a, #0x4e
    00000018 22               [ 8]   69 	ld	(hl+), a
    00000019 36 58            [12]   70 	ld	(hl), #0x58
                                     71 ;main.c:11: SHOW_SPRITES;
    0000001B F0r00            [12]   72 	ldh	a, (_LCDC_REG + 0)
    0000001D F6 02            [ 8]   73 	or	a, #0x02
    0000001F E0r00            [12]   74 	ldh	(_LCDC_REG + 0), a
                                     75 ;main.c:13: while (1){
    00000021                         76 00107$:
                                     77 ;main.c:14: switch(joypad()){
    00000021 CDr00r00         [24]   78 	call	_joypad
    00000024 F8 00            [12]   79 	ldhl	sp,#0
    00000026 77               [ 8]   80 	ld	(hl), a
    00000027 7E               [ 8]   81 	ld	a, (hl)
    00000028 3D               [ 4]   82 	dec	a
    00000029 28 23            [12]   83 	jr	Z, 00102$
    0000002B F8 00            [12]   84 	ldhl	sp,	#0
    0000002D 7E               [ 8]   85 	ld	a, (hl)
    0000002E D6 02            [ 8]   86 	sub	a, #0x02
    00000030 28 10            [12]   87 	jr	Z, 00101$
    00000032 F8 00            [12]   88 	ldhl	sp,	#0
    00000034 7E               [ 8]   89 	ld	a, (hl)
    00000035 D6 04            [ 8]   90 	sub	a, #0x04
    00000037 28 21            [12]   91 	jr	Z, 00103$
    00000039 F8 00            [12]   92 	ldhl	sp,	#0
    0000003B 7E               [ 8]   93 	ld	a, (hl)
    0000003C D6 08            [ 8]   94 	sub	a, #0x08
    0000003E 28 26            [12]   95 	jr	Z, 00104$
    00000040 18 2E            [12]   96 	jr	00105$
                                     97 ;main.c:15: case J_LEFT:
    00000042                         98 00101$:
                                     99 ;/Users/rajath/gbdk/include/gb/gb.h:1977: OAM_item_t * itm = &shadow_OAM[nb];
    00000042 01r00r00         [12]  100 	ld	bc, #_shadow_OAM+0
                                    101 ;/Users/rajath/gbdk/include/gb/gb.h:1978: itm->y+=y, itm->x+=x;
    00000045 0A               [ 8]  102 	ld	a, (bc)
    00000046 02               [ 8]  103 	ld	(bc), a
    00000047 03               [ 8]  104 	inc	bc
    00000048 0A               [ 8]  105 	ld	a, (bc)
    00000049 C6 FE            [ 8]  106 	add	a, #0xfe
    0000004B 02               [ 8]  107 	ld	(bc), a
                                    108 ;main.c:17: break;
    0000004C 18 22            [12]  109 	jr	00105$
                                    110 ;main.c:18: case J_RIGHT:
    0000004E                        111 00102$:
                                    112 ;/Users/rajath/gbdk/include/gb/gb.h:1977: OAM_item_t * itm = &shadow_OAM[nb];
    0000004E 01r00r00         [12]  113 	ld	bc, #_shadow_OAM
                                    114 ;/Users/rajath/gbdk/include/gb/gb.h:1978: itm->y+=y, itm->x+=x;
    00000051 0A               [ 8]  115 	ld	a, (bc)
    00000052 02               [ 8]  116 	ld	(bc), a
    00000053 03               [ 8]  117 	inc	bc
    00000054 0A               [ 8]  118 	ld	a, (bc)
    00000055 C6 02            [ 8]  119 	add	a, #0x02
    00000057 02               [ 8]  120 	ld	(bc), a
                                    121 ;main.c:20: break;
    00000058 18 16            [12]  122 	jr	00105$
                                    123 ;main.c:21: case J_UP:
    0000005A                        124 00103$:
                                    125 ;/Users/rajath/gbdk/include/gb/gb.h:1977: OAM_item_t * itm = &shadow_OAM[nb];
    0000005A 01r00r00         [12]  126 	ld	bc, #_shadow_OAM
                                    127 ;/Users/rajath/gbdk/include/gb/gb.h:1978: itm->y+=y, itm->x+=x;
    0000005D 0A               [ 8]  128 	ld	a, (bc)
    0000005E C6 FE            [ 8]  129 	add	a, #0xfe
    00000060 02               [ 8]  130 	ld	(bc), a
    00000061 03               [ 8]  131 	inc	bc
    00000062 0A               [ 8]  132 	ld	a, (bc)
    00000063 02               [ 8]  133 	ld	(bc), a
                                    134 ;main.c:23: break;
    00000064 18 0A            [12]  135 	jr	00105$
                                    136 ;main.c:24: case J_DOWN:
    00000066                        137 00104$:
                                    138 ;/Users/rajath/gbdk/include/gb/gb.h:1977: OAM_item_t * itm = &shadow_OAM[nb];
    00000066 01r00r00         [12]  139 	ld	bc, #_shadow_OAM
                                    140 ;/Users/rajath/gbdk/include/gb/gb.h:1978: itm->y+=y, itm->x+=x;
    00000069 0A               [ 8]  141 	ld	a, (bc)
    0000006A C6 02            [ 8]  142 	add	a, #0x02
    0000006C 02               [ 8]  143 	ld	(bc), a
    0000006D 03               [ 8]  144 	inc	bc
    0000006E 0A               [ 8]  145 	ld	a, (bc)
    0000006F 02               [ 8]  146 	ld	(bc), a
                                    147 ;main.c:27: }
    00000070                        148 00105$:
                                    149 ;main.c:28: wait_vbl_done();
    00000070 CDr00r00         [24]  150 	call	_wait_vbl_done
    00000073 18 AC            [12]  151 	jr	00107$
                                    152 ;main.c:30: }
    00000075 33               [ 8]  153 	inc	sp
    00000076 C9               [16]  154 	ret
                                    155 	.area _CODE
                                    156 	.area _INITIALIZER
    00000000                        157 __xinit__Smiler:
    00000000 7E                     158 	.db #0x7e	; 126
    00000001 7E                     159 	.db #0x7e	; 126
    00000002 FF                     160 	.db #0xff	; 255
    00000003 81                     161 	.db #0x81	; 129
    00000004 FF                     162 	.db #0xff	; 255
    00000005 A5                     163 	.db #0xa5	; 165
    00000006 FF                     164 	.db #0xff	; 255
    00000007 81                     165 	.db #0x81	; 129
    00000008 FF                     166 	.db #0xff	; 255
    00000009 81                     167 	.db #0x81	; 129
    0000000A FF                     168 	.db #0xff	; 255
    0000000B BD                     169 	.db #0xbd	; 189
    0000000C FF                     170 	.db #0xff	; 255
    0000000D 81                     171 	.db #0x81	; 129
    0000000E 7E                     172 	.db #0x7e	; 126
    0000000F 7E                     173 	.db #0x7e	; 126
    00000010 7E                     174 	.db #0x7e	; 126
    00000011 7E                     175 	.db #0x7e	; 126
    00000012 FF                     176 	.db #0xff	; 255
    00000013 81                     177 	.db #0x81	; 129
    00000014 FF                     178 	.db #0xff	; 255
    00000015 A5                     179 	.db #0xa5	; 165
    00000016 FF                     180 	.db #0xff	; 255
    00000017 81                     181 	.db #0x81	; 129
    00000018 FF                     182 	.db #0xff	; 255
    00000019 A5                     183 	.db #0xa5	; 165
    0000001A FF                     184 	.db #0xff	; 255
    0000001B 99                     185 	.db #0x99	; 153
    0000001C FF                     186 	.db #0xff	; 255
    0000001D 81                     187 	.db #0x81	; 129
    0000001E 7E                     188 	.db #0x7e	; 126
    0000001F 7E                     189 	.db #0x7e	; 126
                                    190 	.area _CABS (ABS)
